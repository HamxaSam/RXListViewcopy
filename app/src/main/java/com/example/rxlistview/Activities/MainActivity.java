package com.example.rxlistview.Activities;import android.annotation.SuppressLint;import android.app.FragmentManager;import android.content.Intent;import android.os.Build;import android.os.Bundle;import androidx.annotation.RequiresApi;import androidx.fragment.app.Fragment;import androidx.fragment.app.FragmentTransaction;import androidx.appcompat.app.AppCompatActivity;import android.view.View;import android.view.animation.LinearInterpolator;import android.widget.ImageButton;import android.widget.LinearLayout;import android.widget.TextView;import android.widget.Toast;import com.example.rxlistview.Fragments.AboutFragment;import com.example.rxlistview.Fragments.FavouriteFragment;import com.example.rxlistview.Fragments.MainFragment;import com.example.rxlistview.Fragments.SearchFragment;import com.example.rxlistview.R;import com.example.rxlistview.helpers.RxBus;import io.reactivex.disposables.Disposable;import io.reactivex.functions.Consumer;public class MainActivity extends AppCompatActivity {    ImageButton btn_extra,btn_search;    TextView txt_title;    LinearLayout linear;    FragmentTransaction ft;    FragmentManager fm;    String type,backStateName;    Fragment fragment,fragment1;    Disposable disposable;    @SuppressLint("ResourceAsColor")    @Override    protected void onCreate(Bundle savedInstanceState) {        super.onCreate ( savedInstanceState );        setContentView ( R.layout.activity_main );        init();        click();        if (savedInstanceState == null) {            if(type==null){                txt_title.setText ("Home"  );                btn_search.setVisibility ( View.VISIBLE );                fragment =  MainFragment.newInstance ();            }            else if(type.equals ( "home" )){                btn_search.setVisibility ( View.VISIBLE );                txt_title.setText ("Home"  );                fragment =  MainFragment.newInstance ();            }else if(type.equals ( "favourite" )){                 txt_title.setText ("Favourite"  );                 fragment =  FavouriteFragment.newInstance ();            }else if(type.equals ( "about" )){                // txt_title.setText ("About"  );                /// txt_title.setTextColor( Color.BLACK );                 txt_title.setBackgroundResource ( R.color.erdor );                 fragment =  AboutFragment.newInstance ();            }else{                fragment =  MainFragment.newInstance ();                btn_search.setVisibility ( View.VISIBLE );                txt_title.setText ("Home"  );            }            //replacing the fragment            if (fragment != null) {                backStateName =fragment1.getClass().getName();                ft = getSupportFragmentManager ( ).beginTransaction ( );                ft.replace ( R.id.content_frame, fragment );                ft.setCustomAnimations(R.anim.slide_in, R.anim.exit_to_right);               // ft.addToBackStack ( null );                ft.commit ( );            }        }    }    private void click() {        btn_extra.setOnClickListener ( new View.OnClickListener ( ) {            @RequiresApi(api = Build.VERSION_CODES.JELLY_BEAN)            @Override            public void onClick(View v) {                btn_extra.animate().rotationBy(360).withEndAction(MainActivity.this::click).setDuration(1000).setInterpolator(new LinearInterpolator ()).start();                startActivity ( new Intent ( MainActivity.this, NevigationAcitivty.class ) );                overridePendingTransition(R.anim.slide_in, R.anim.slide_out);                finish ();            }        });        btn_search.setOnClickListener ( new View.OnClickListener ( ) {            @Override            public void onClick(View v) {                Toast.makeText ( MainActivity.this, "search", Toast.LENGTH_SHORT ).show ( );                fragment =  SearchFragment.newInstance ();                ft = getSupportFragmentManager ( ).beginTransaction ( );                ft.setCustomAnimations(R.anim.slide_in, R.anim.exit_to_left);                ft.replace ( R.id.content_frame, fragment );                //ft.addToBackStack ( backStateName );                ft.commit ( );                linear.setVisibility ( View.GONE );            }        });    }    private void init() {        txt_title = findViewById ( R.id.txt_title );        btn_extra = findViewById ( R.id.btn_extra );        btn_search = findViewById ( R.id.btn_search );        linear = findViewById ( R.id.linear );        fm = getFragmentManager();        fragment1 = MainFragment.newInstance ();        disposable = RxBus.subscribe( new Consumer<Object> () {            @Override            public void accept(Object o) throws Exception {                if(o ==null){                    o = "home";                    type = "home";                    Toast.makeText ( MainActivity.this, o+"", Toast.LENGTH_SHORT ).show ( );                }                else if (o.equals ( "home" )) {                    type = "home";                }else if (o.equals ( "about" )) {                    type = "about";                }else if(o.equals ( "favourite" )){                    type = "favourite";                }            }        });//if you no longer need data "very important"        disposable.dispose(); //unsubscribe    }    @Override    public void onBackPressed() {        super.onBackPressed ( );//        if(fm.getBackStackEntryCount()==1){//            fragment =  MainFragment.newInstance ();////        }        startActivity ( new Intent ( MainActivity.this,NevigationAcitivty.class ));        overridePendingTransition(R.anim.slide_in, R.anim.exit_to_right);        finish ();    }    @Override    protected void onDestroy() {        super.onDestroy();        disposable.dispose(); //very important    }}