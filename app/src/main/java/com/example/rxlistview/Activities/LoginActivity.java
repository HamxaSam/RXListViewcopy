package com.example.rxlistview.Activities;import android.annotation.SuppressLint;import android.annotation.TargetApi;import android.content.Intent;import android.os.Build;import android.os.Bundle;import androidx.annotation.RequiresApi;import androidx.appcompat.app.AppCompatActivity;import android.widget.Button;import android.widget.EditText;import android.widget.TextView;import android.widget.Toast;import com.example.rxlistview.R;import com.example.rxlistview.sql.DatabaseHelper;import com.jakewharton.rxbinding2.view.RxView;import com.jakewharton.rxbinding2.widget.RxTextView;import io.reactivex.Observable;import io.reactivex.Observer;import io.reactivex.functions.BiFunction;import io.reactivex.observers.DisposableObserver;public class LoginActivity extends AppCompatActivity {    EditText et_name, et_password;    TextView tv_status;    Button btn_login;    DatabaseHelper databaseHelper;    Observable<Boolean> observable;    Observer<Boolean> observer;    @TargetApi(Build.VERSION_CODES.N)    @Override    protected void onCreate(Bundle savedInstanceState) {        super.onCreate(savedInstanceState);        setContentView( R.layout.activity_login );        init();        click();    }    @SuppressLint("CheckResult")    private void click() {        RxView.clicks(tv_status)                .subscribe(o -> {                    Toast.makeText ( LoginActivity.this, "sign page access", Toast.LENGTH_SHORT ).show ( );                    startActivity ( new Intent ( LoginActivity.this,SignUpActivity.class ));                });        RxView.clicks(btn_login)                .subscribe( o -> {                    if(isValidForm(et_name.getText ().toString (),et_password.getText ().toString ())){                        if (databaseHelper.checkUser ( et_name.getText ( ).toString ( ).trim ( ), et_password.getText ( ).toString ( ).trim ( ) ) == true) {                            Toast.makeText ( LoginActivity.this, "Main page access", Toast.LENGTH_SHORT ).show ( );                            startActivity ( new Intent ( LoginActivity.this, MainActivity.class ) );                        } else {                            Toast.makeText ( LoginActivity.this, "Invalid user ", Toast.LENGTH_SHORT ).show ( );                        }                    }else {                        Toast.makeText ( LoginActivity.this, "Some thing wrong ", Toast.LENGTH_SHORT ).show ( );                    }                });    }    @RequiresApi(api = Build.VERSION_CODES.N)    private void init() {        et_name = findViewById(R.id.et_name);        et_password = findViewById(R.id.et_password);        btn_login = findViewById(R.id.btn_login);        tv_status = findViewById(R.id.tv_status);        databaseHelper = new DatabaseHelper ( getApplicationContext () );        Observable<String>  nameObser = RxTextView.textChanges ( et_name ).skip ( 1 ).map ( new io.reactivex.functions.Function<CharSequence, String> ( ) {            @Override            public String apply(CharSequence charSequence) throws Exception {                return charSequence.toString ();            }        } );        Observable<String>  pswdObser = RxTextView.textChanges ( et_password ).skip ( 1 ).map ( new io.reactivex.functions.Function<CharSequence, String> ( ) {            @Override            public String apply(CharSequence charSequence) throws Exception {                return charSequence.toString ();            }        } );        observable = Observable.combineLatest(nameObser, pswdObser, new BiFunction<String, String, Boolean> () {            @Override            public Boolean apply(String s, String s2) throws Exception {                return isValidForm(s, s2);            }        });        observable.subscribe(new DisposableObserver<Boolean> () {            @Override            public void onNext(Boolean aBoolean) {                updateButton(aBoolean);            }            @Override            public void onError(Throwable e) {            }            @Override            public void onComplete() {            }        });    }    public void updateButton(boolean valid) {        if (valid) {            btn_login.setEnabled ( true );        }    }    public boolean isValidForm(String name, String password) {        boolean validName = !name.isEmpty();        if (!validName || !name.matches ( "[a-zA-Z0-9._-]+@[a-z]+.[a-z]+" )) {            et_name.setError("Please enter valid email");        }        boolean validPass = !password.isEmpty() && password.equals(et_password.getText ().toString ().trim ()) ||                                                                           password.equals(et_password.getText ().toString ().length ()<6);        if (!validPass) {            et_password.setError("Incorrect password or short");        }        return validName && validPass;    }}