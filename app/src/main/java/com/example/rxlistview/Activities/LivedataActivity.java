package com.example.rxlistview.Activities;import androidx.lifecycle.Observer;import androidx.lifecycle.ViewModelProviders;import android.content.res.Configuration;import androidx.swiperefreshlayout.widget.SwipeRefreshLayout;import androidx.appcompat.app.AppCompatActivity;import android.os.Bundle;import androidx.recyclerview.widget.DefaultItemAnimator;import androidx.recyclerview.widget.GridLayoutManager;import androidx.recyclerview.widget.RecyclerView;import com.example.rxlistview.R;import com.example.rxlistview.adapters.BlogAdapter;import com.example.rxlistview.model.Blog;import com.example.rxlistview.model.MainViewModel;import java.util.List;public class LivedataActivity extends AppCompatActivity {    RecyclerView mRecyclerView;        SwipeRefreshLayout swipeRefresh;        private MainViewModel mainViewModel;        BlogAdapter mBlogAdapter;        @Override        protected void onCreate(Bundle savedInstanceState) {            super.onCreate ( savedInstanceState );            setContentView ( R.layout.activity_livedata );            initializationViews ( );            mainViewModel = ViewModelProviders.of ( this ).get ( MainViewModel.class );            getPopularBlog ( );            // lambda expression            swipeRefresh.setOnRefreshListener ( () -> {                getPopularBlog ( );            } );        }        private void initializationViews() {            swipeRefresh = findViewById ( R.id.swiperefresh );            mRecyclerView = findViewById ( R.id.blogRecyclerView );        }        public void getPopularBlog() {            swipeRefresh.setRefreshing ( true );            mainViewModel.getAllBlog ( ).observe ( this, new Observer<List<Blog>> ( ) {                @Override                public void onChanged(List<Blog> blogList) {                    swipeRefresh.setRefreshing ( false );                    prepareRecyclerView ( blogList );                }            } );        }        private void prepareRecyclerView(List<Blog> blogList) {            mBlogAdapter = new BlogAdapter ( blogList );            if (this.getResources ( ).getConfiguration ( ).orientation == Configuration.ORIENTATION_PORTRAIT) {                mRecyclerView.setLayoutManager ( new GridLayoutManager ( this, 2 ) );            } else {                mRecyclerView.setLayoutManager ( new GridLayoutManager ( this, 4 ) );            }            mRecyclerView.setItemAnimator ( new DefaultItemAnimator ( ) );            mRecyclerView.setAdapter ( mBlogAdapter );            mBlogAdapter.notifyDataSetChanged ( );        }}