package com.example.rxlistview.Activities;import android.app.Activity;import android.app.NotificationChannel;import android.app.NotificationManager;import android.content.Context;import android.content.Intent;import android.database.Cursor;import android.net.Uri;import android.os.Build;import android.os.Bundle;import android.os.PersistableBundle;import android.provider.MediaStore;import android.view.View;import android.widget.Button;import android.widget.Toast;import androidx.annotation.Nullable;import androidx.appcompat.app.AppCompatActivity;import androidx.core.app.NotificationCompat;import androidx.work.Data;import androidx.work.OneTimeWorkRequest;import androidx.work.PeriodicWorkRequest;import androidx.work.WorkManager;import com.example.rxlistview.R;import com.example.rxlistview.helpers.MyInterface;import com.example.rxlistview.helpers.WorkingMang;import com.google.gson.annotations.SerializedName;import com.theartofdev.edmodo.cropper.CropImage;import java.util.concurrent.TimeUnit;import okhttp3.MultipartBody;import okhttp3.RequestBody;import retrofit2.Call;import retrofit2.http.Multipart;import retrofit2.http.POST;import retrofit2.http.Part;public class HelloWorkManger extends AppCompatActivity {    private String imagePathUri;    @Override    public void onCreate(@Nullable Bundle savedInstanceState) {        super.onCreate ( savedInstanceState );        setContentView ( R.layout.activity_test );        Button notificat = findViewById ( R.id.notificat );        Intent intent = getIntent();        MyInterface inter = (MyInterface) intent.getSerializableExtra( "object");//        OneTimeWorkRequest simpleRequest = new OneTimeWorkRequest.Builder ( WorkingMang.class )//                .build ( );        notificat.setOnClickListener ( v -> {            PeriodicWorkRequest myWorkRequest =                    new PeriodicWorkRequest.Builder(WorkingMang.class,  12, TimeUnit.MINUTES)                            .build();            WorkManager.getInstance().enqueue(myWorkRequest);        } );        Button pickpicture = findViewById ( R.id.pickpicture );        Button upload = findViewById ( R.id.upload );        pickpicture.setOnClickListener ( v ->            CropImage.activity ( )                    .start ( this )         );        upload.setOnClickListener ( v -> startWork ( ) );    }    private void startWork() {        OneTimeWorkRequest oneTimeWorkRequest = new OneTimeWorkRequest.Builder ( WorkingMang.class )                .setInputData ( createInputData ( imagePathUri ) )                .setInitialDelay ( 2, TimeUnit.SECONDS ).build ( );        WorkManager.getInstance ( ).enqueue ( oneTimeWorkRequest );    }    @Override    public void onActivityResult(int requestCode, int resultCode, Intent data) {        super.onActivityResult ( requestCode, resultCode, data );        if (requestCode == CropImage.CROP_IMAGE_ACTIVITY_REQUEST_CODE) {            CropImage.ActivityResult result = CropImage.getActivityResult ( data );            if (resultCode == RESULT_OK) {                Uri resultUri = result.getUri ( );                String pathToStoredMedia = getRealPathFromURIPath(resultUri, this);                imagePathUri = pathToStoredMedia;            } else if (resultCode == CropImage.CROP_IMAGE_ACTIVITY_RESULT_ERROR_CODE) {                Exception error = result.getError ( );            }        }    }    private Data createInputData(String imagePath){        Data data = new Data.Builder()                .putString("imagePath", imagePath)                .build();        return data;    }    //geting real path from gallery    private String getRealPathFromURIPath(Uri contentURI, Activity activity) {        Cursor cursor = activity.getContentResolver().query( contentURI, null, null, null, null);        if (cursor == null) {            return contentURI.getPath();        } else {            cursor.moveToFirst();            int idx = cursor.getColumnIndex( MediaStore.Images.ImageColumns.DATA);            return cursor.getString(idx);        }    }}