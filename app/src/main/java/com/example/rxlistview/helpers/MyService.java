package com.example.rxlistview.helpers;import android.app.AlarmManager;import android.app.NotificationChannel;import android.app.NotificationManager;import android.app.PendingIntent;import android.app.job.JobParameters;import android.app.job.JobService;import android.content.Context;import android.content.Intent;import android.os.Build;import android.widget.Toast;import androidx.annotation.RequiresApi;import androidx.core.app.NotificationCompat;import com.example.rxlistview.R;@RequiresApi(api = Build.VERSION_CODES.LOLLIPOP)public class MyService extends JobService {    @Override    public boolean onStartJob(JobParameters jobParameters) {//        int timeinput = Integer.parseInt("1");//        Intent intent = new Intent( getApplicationContext (), MyReceiver.class);//        PendingIntent pendingIntent = PendingIntent.getBroadcast( getApplicationContext(), 234324243, intent, 0);//        AlarmManager alarmManager = (AlarmManager) getApplicationContext ().getSystemService( ALARM_SERVICE);//        alarmManager.set(AlarmManager.RTC_WAKEUP, System.currentTimeMillis()+(timeinput * 1000), pendingIntent);        showNotification("Testing", "job scheduling on 22 or less");        return false;    }    private void showNotification(String title, String task) {        NotificationManager notificationManager = (NotificationManager) getApplicationContext().getSystemService( Context.NOTIFICATION_SERVICE);        NotificationCompat.Builder notification = new NotificationCompat.Builder( getApplicationContext(), "inducesmile")                .setContentTitle(title)                .setContentText(task)                .setSmallIcon( R.mipmap.ic_launcher);        notificationManager.notify(1, notification.build());    }    @Override    public boolean onStopJob(JobParameters jobParameters) {        Toast.makeText ( this, "job scheduling is stop", Toast.LENGTH_SHORT ).show ( );        return false;    }}